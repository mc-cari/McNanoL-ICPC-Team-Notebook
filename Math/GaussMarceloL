const double EPS = 1e-9;

int gauss (vector < vector<double> > a, vector<double> & ans){
    int l1 = a.size();
    int l2 = a[0].size(); 
    //pivotea la matriz
    for(int i = 0; i<l2; ++i){
        for(int j = i+1; j<l1 && abs(a[i][i]) < EPS; ++j){
            if(abs(a[j][i]) > EPS) swap(a[i], a[j]), swap(ans[i], ans[j]);
        }
        if(abs(a[i][i]) < EPS) return 0;
        for(int j = i+1; j<l1; ++j){
            long double rate = a[j][i] / a[i][i];
            ans[j] -= rate*ans[i];
            for(int k = i; k<l2; ++k) a[j][k] -= rate*a[i][k];
        }
    }

    // recoge las variables, las calcula y las lleva hacia arriba
    // consigue el valor de todas las ecuaciones
    for(int i = l2-1; i>=0; --i){
        ans[i] /= a[i][i];
        a[i][i] = 1;
        for(int j = i-1; j>=0; --j){
            ans[j] -= a[j][i] * ans[i];
        }
    }
    return 1;
}
